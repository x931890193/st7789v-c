
/*******************************************************************************
* generated by lcd-image-converter rev.030b30d from 2019-03-17 01:38:34 +0500
* image
* filename: unsaved
* name: per
*
* preset name: Color R5G6B5
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Color, not_used not_used
* split to rows: yes
* bits per pixel: 16
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint8_t image_data_per[864] = {
    // ██████████████████
    // ██████████████████
    // ██████████████████
    // ██████████████████
    // ██████████████████
    // ██████████████████
    // ██▒▒▒██████▒▓█████
    // █░▓██░█████▒██████
    // ▓▒███▒▓███▒▓██████
    // ▓▒███▒▓███▒███████
    // ▓▒███▒▓██▒████████
    // ▓▒███▒▓█▓▒██▓▒▒▓██
    // █░▓██░██▒██▒▓██▒▓█
    // ██▒▒▒██▓▒██░███▓▒█
    // ███████▒███░███▓░█
    // ██████▓▒███░███▓░█
    // ██████░████░███▓▒█
    // █████▓▓████▒▓██▒▓█
    // █████░██████▓▒▒▓██
    // ██████████████████
    // ██████████████████
    // ██████████████████
    // ██████████████████
    // ██████████████████
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xee, 0xfc, 0xbb, 0xf3, 0xa2, 0x10, 0xb3, 0xb3, 0xe6, 0xbb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb3, 0x72, 0xd5, 0x78, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xf7, 0x5d, 0xa1, 0x4f, 0xde, 0x19, 0xff, 0xdf, 0xde, 0x5a, 0xa1, 0x0f, 0xf7, 0x5d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xde, 0x5a, 0xa2, 0x0f, 0xff, 0xbe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xd5, 0xd8, 0xa1, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xaa, 0x90, 0xd5, 0x78, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xab, 0x11, 0xd5, 0xd9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xc4, 0xf6, 0xab, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb3, 0xd3, 0xc4, 0xb5, 0xff, 0xff, 0xff, 0xff, 0xde, 0x19, 0xaa, 0x70, 0xff, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xc4, 0xf6, 0xab, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb3, 0xd3, 0xc4, 0x75, 0xff, 0xff, 0xff, 0xdf, 0xaa, 0x90, 0xde, 0x19, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xd5, 0xd8, 0xa1, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xaa, 0x90, 0xcd, 0x57, 0xff, 0xff, 0xd5, 0xd9, 0xaa, 0xf1, 0xff, 0xdf, 0xf7, 0x9e, 0xc4, 0xb5, 0xaa, 0x70, 0xb3, 0x32, 0xd5, 0xb8, 0xff, 0xff, 0xff, 0xff, 
    0xf7, 0x5d, 0xa1, 0x2f, 0xde, 0x19, 0xff, 0xdf, 0xde, 0x5a, 0xa0, 0xee, 0xef, 0x1c, 0xff, 0xbe, 0xaa, 0x30, 0xde, 0x5a, 0xff, 0xff, 0xb3, 0x72, 0xc4, 0x95, 0xff, 0xbe, 0xf7, 0x3d, 0xaa, 0x70, 0xd5, 0xb8, 0xff, 0xff, 
    0xff, 0xff, 0xee, 0xfc, 0xbb, 0xd3, 0xa2, 0x10, 0xb3, 0xb3, 0xe6, 0xbb, 0xff, 0xff, 0xd5, 0x98, 0xb3, 0x52, 0xff, 0xff, 0xef, 0x3d, 0xa0, 0xee, 0xee, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xcd, 0x37, 0xaa, 0xf1, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x9e, 0xa1, 0xaf, 0xe6, 0x9b, 0xff, 0xff, 0xe6, 0x9b, 0xa0, 0xee, 0xf7, 0x5d, 0xff, 0xff, 0xff, 0xff, 0xd5, 0xd9, 0xa0, 0xee, 0xff, 0xdf, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcd, 0x37, 0xb3, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xe6, 0xbb, 0xa0, 0xee, 0xf7, 0x5d, 0xff, 0xff, 0xff, 0xff, 0xd5, 0xd9, 0xa0, 0xee, 0xff, 0xdf, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x7d, 0xa1, 0x4f, 0xee, 0xdc, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x3d, 0xa0, 0xee, 0xee, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xcd, 0x37, 0xaa, 0xf1, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc4, 0xd6, 0xbc, 0x34, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xb3, 0xd3, 0xc4, 0x95, 0xff, 0xbe, 0xf7, 0x3d, 0xaa, 0x70, 0xd5, 0xd8, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x3d, 0xa0, 0xee, 0xef, 0x1c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0x9e, 0xc4, 0xb5, 0xaa, 0x70, 0xb3, 0x12, 0xd5, 0xd8, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const tImage per = { image_data_per, 18, 24,
    8 };
